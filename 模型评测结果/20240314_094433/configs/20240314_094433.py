datasets=[
    dict(abbr='smart_home',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.datasets.SmartHomeEvaluator'),
            pred_role='BOT'),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    begin=[
                        dict(fallback_role='HUMAN',
                            prompt='你现在是一个智能家居AI助手, 能够从用户上下文提取出用户的动作(action), 设备(device), 空间(space), 接口(api), 回复(reponse), 场景(scene), 设备id(device_id), 场景id(scene_id), 没有的字段返回空;-device_id从这里匹配: (device_id=1,射灯);(device_id=2,筒灯);(device_id=3,灯带);(device_id=4,窗帘);-scene_id从这里匹配: (scene_id=1,回家);(scene_id=2,离家);(scene_id=4,洗浴);(scene_id=5,睡眠);\n',
                            role='SYSTEM'),
                        ],
                    round=[
                        dict(prompt='{question}',
                            role='HUMAN'),
                        dict(prompt='{answer}',
                            role='BOT'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='./data/smart_home/conversations-test.jsonl',
        reader_cfg=dict(
            input_columns=[
                'question',
                ],
            output_column='answer',
            test_split='test'),
        type='opencompass.datasets.SmartHomeDataset'),
    ]
internlm2_chat_7b=dict(
    abbr='InternLM2-Chat-7B-SFT-SMC-V1.0',
    api_addr='http://0.0.0.0:8080',
    batch_size=16,
    gen_config=dict(
        max_new_tokens=300,
        temperature=0.1,
        top_k=40,
        top_p=1),
    max_out_len=300,
    max_seq_len=2048,
    run_cfg=dict(
        num_gpus=4,
        num_procs=1),
    type='opencompass.models.turbomind_api.TurboMindAPIModel')
models=[
    dict(abbr='InternLM2-Chat-7B-SFT-SMC-V1.0',
        api_addr='http://0.0.0.0:8080',
        batch_size=16,
        gen_config=dict(
            max_new_tokens=300,
            temperature=0.1,
            top_k=40,
            top_p=1),
        max_out_len=300,
        max_seq_len=2048,
        run_cfg=dict(
            num_gpus=4,
            num_procs=1),
        type='opencompass.models.turbomind_api.TurboMindAPIModel'),
    ]
sh_datasets=[
    dict(abbr='smart_home',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.datasets.SmartHomeEvaluator'),
            pred_role='BOT'),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    begin=[
                        dict(fallback_role='HUMAN',
                            prompt='你现在是一个智能家居AI助手, 能够从用户上下文提取出用户的动作(action), 设备(device), 空间(space), 接口(api), 回复(reponse), 场景(scene), 设备id(device_id), 场景id(scene_id), 没有的字段返回空;-device_id从这里匹配: (device_id=1,射灯);(device_id=2,筒灯);(device_id=3,灯带);(device_id=4,窗帘);-scene_id从这里匹配: (scene_id=1,回家);(scene_id=2,离家);(scene_id=4,洗浴);(scene_id=5,睡眠);\n',
                            role='SYSTEM'),
                        ],
                    round=[
                        dict(prompt='{question}',
                            role='HUMAN'),
                        dict(prompt='{answer}',
                            role='BOT'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='./data/smart_home/conversations-test.jsonl',
        reader_cfg=dict(
            input_columns=[
                'question',
                ],
            output_column='answer',
            test_split='test'),
        type='opencompass.datasets.SmartHomeDataset'),
    ]
work_dir='./outputs/default/20240314_094433'